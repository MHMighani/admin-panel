{"version":3,"file":"static/js/721.2b813378.chunk.js","mappings":"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","sources":["webpack://admin-panel/./src/components/UI/button/Button.module.scss?6002","components/UI/button/Button.tsx","webpack://admin-panel/./src/components/UI/input/Input.module.scss?b593","components/UI/input/Input.tsx","webpack://admin-panel/./src/components/login/Login.module.scss?4c39","components/login/Login.tsx","pages/Login.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Button_btn__H-LYw\",\"button\":\"Button_button__NKO70\",\"outline\":\"Button_outline__lb-bk\"};","import React from \"react\";\r\n\r\nimport classes from \"./Button.module.scss\";\r\n\r\ninterface IButton {\r\n  type?: \"button\" | \"submit\";\r\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\r\n  outline?: boolean;\r\n}\r\nconst Button: React.FC<IButton> = (props) => {\r\n  return (\r\n    <button\r\n      className={`${classes.btn} ${\r\n        props.outline ? classes.outline : classes.button\r\n      } `}\r\n      type={props.type || \"button\"}\r\n      onClick={props.onClick}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form__control\":\"Input_form__control__W-hzb\"};","import React, { useImperativeHandle, useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport classes from \"./Input.module.scss\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  type: string;\r\n  minLength?: number;\r\n  maxLength?: number;\r\n  placeholder?: string;\r\n  classes?: string;\r\n  value?: string;\r\n  ref?: HTMLInputElement;\r\n  readonly?: boolean;\r\n}\r\n\r\ninterface IImperativeHandler {\r\n  focus: () => void;\r\n  value?: string;\r\n}\r\nconst Input = React.forwardRef<IImperativeHandler, Props>((props, ref) => {\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n  const [value, setValue] = useState(props.value || \"\");\r\n\r\n  function inputChangeHandler(e: React.FormEvent<HTMLInputElement>) {\r\n    setValue(e.currentTarget.value);\r\n  }\r\n\r\n  function inputFocused() {\r\n    inputRef.current?.focus();\r\n    inputRef.current?.setAttribute(\"style\", \"border:2px solid red\");\r\n    console.log(inputRef.current?.value);\r\n  }\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      focus: inputFocused,\r\n      value: value,\r\n    };\r\n  });\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className={`${classes.form__control} ${props.classes}`}>\r\n      <label htmlFor={props.id}>{t(`${props.id}`)}</label>\r\n      <input\r\n        ref={inputRef}\r\n        id={props.id}\r\n        minLength={props.minLength}\r\n        maxLength={props.maxLength}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        value={value}\r\n        readOnly={props.readonly || false}\r\n        onChange={inputChangeHandler}\r\n      />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Login_container__-2xP7\",\"keyPic\":\"Login_keyPic__yjPiS\",\"loginBox\":\"Login_loginBox__mcGeR\",\"logo\":\"Login_logo__dCfhn\",\"title\":\"Login_title__JXbNd\",\"errorMessage\":\"Login_errorMessage__Mec0M\",\"forgat_pass\":\"Login_forgat_pass__RX+aL\",\"checkbox\":\"Login_checkbox__sREh0\",\"rtl\":\"Login_rtl__a-IO3\"};","import React, { useContext, useRef } from \"react\";\r\nimport LoginContext from \"../../store/loginContext\";\r\nimport langContextObj from \"../../store/langContext\";\r\nimport { images } from \"../../constants\";\r\nimport Input from \"../UI/input/Input\";\r\nimport Button from \"../UI/button/Button\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport classes from \"./Login.module.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction LoginBox() {\r\n  const loginCtx = useContext(LoginContext);\r\n  const langCtx = useContext(langContextObj);\r\n  const userNameRef = useRef<HTMLInputElement>(null);\r\n  const errorMessageRef = useRef<HTMLSpanElement>(null);\r\n  const { t } = useTranslation();\r\n\r\n  let isValid = true;\r\n  function loginHandler(e: React.FormEvent) {\r\n    e.preventDefault();\r\n    isValid = userNameRef.current?.value === \"admin\";\r\n    if (userNameRef.current) {\r\n      console.log(userNameRef.current);\r\n      if (isValid) {\r\n        loginCtx.toggleLogin();\r\n      } else {\r\n        userNameRef.current.focus();\r\n        errorMessageRef.current?.setAttribute(\r\n          \"style\",\r\n          \"display: inline-block;opacity: 1\"\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`${classes.container} ${\r\n        langCtx.lang === \"fa\" ? classes.rtl : \"\"\r\n      }`}\r\n    >\r\n      <div className={classes.loginBox}>\r\n        <div className={classes.logo}>\r\n          <img src={images.logo} alt=\"digikala\" />\r\n        </div>\r\n        <h2 className={classes.title}>{t(\"loginPage\")}</h2>\r\n        <form onSubmit={loginHandler}>\r\n          <Input\r\n            ref={userNameRef}\r\n            type={\"text\"}\r\n            id={\"userName\"}\r\n            placeholder={\"admin\"}\r\n          />\r\n          <span ref={errorMessageRef} className={classes.errorMessage}>\r\n            {t(\"errorMessage\")}\r\n          </span>\r\n          <Input\r\n            type={\"password\"}\r\n            id={\"pass\"}\r\n            value={\"admin\"}\r\n            readonly={true}\r\n          />\r\n          <Button type=\"submit\">{t(\"login\")}</Button>\r\n          <Link className={classes.forgat_pass} to=\"/\">\r\n            {t(\"forgetPass\")}\r\n          </Link>\r\n          <div className={classes.checkbox}>\r\n            <input type=\"checkbox\" id=\"rememberMe\" />\r\n            <label htmlFor=\"rememberMe\">{t(\"rememberMe\")}</label>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div className={classes.keyPic}>\r\n        <img\r\n          src={require(\"../../assets/images/Revenue-cuate.svg\").default}\r\n          alt=\"illustrator key\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginBox;\r\n","import React from \"react\";\r\nimport LoginBox from \"../components/login/Login\";\r\n\r\nfunction Login() {\r\n  return (\r\n    <section>\r\n      <LoginBox />\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"names":["props","className","classes","outline","type","onClick","children","React","ref","inputRef","useRef","useState","value","setValue","inputFocused","current","focus","setAttribute","console","log","useImperativeHandle","t","useTranslation","htmlFor","id","minLength","maxLength","placeholder","readOnly","readonly","onChange","e","currentTarget","loginCtx","useContext","LoginContext","langCtx","langContextObj","userNameRef","errorMessageRef","isValid","lang","src","images","alt","onSubmit","preventDefault","toggleLogin","Button","to","require","Login"],"sourceRoot":""}